                                                                                                                                                                                                                                                                                                                                                                        /*
notifications ⟩ components ⟩ icaros-ui
author      Tuomas Hatakka
email       tuomas.hatakka@gmail.com
copyright   Copyright (C) 2016-2017 Tuomas Hatakka

✕ Namespace                                                                                                                                                                                                                                                                                                                                                          */
atom-notifications {

.text(normal);
@shadow-opacity:    10%;
@shadow-blur:       1rem;
@shadow:            0 @shadow-blur/3 @shadow-blur fade(black, @shadow-opacity);
@padding:           @component-padding / 3 * 2;
@left-bar-width:    @notification-icon-size;
@border-radius:     @component-border-radius;
@gutter:            1px;

atom-notification {
  background-color: @notification-background-color;
  color:            @notification-text-color;
  box-shadow:       @shadow;
  margin:           0 0 @gutter;
  padding:          0 0 0 @left-bar-width;
  border-radius:    @border-radius !important;
  transition:       @transition-default;
  --width:          450px;

  &, &.has-detail {
    width: auto }

  .content .item > * {
    width: var(--width) }
  .content .stack-container[style*='display: block'] {
    min-width: 50vw
  }

  &::after,
  &:not(.has-close) .close-all {
    display:            none }

  &.icon::before {
    background:         transparent;
    box-sizing:         border-box;
    position:           absolute;
    display:            block;
    height:             auto;
    text-align:         center;
    line-height:        auto;
    top:                0;
    left:               0;
    bottom:             0;
    margin:             -@left-bar-width/2 0;
    transform:          none;
    top:                50%;
    width:              @left-bar-width;
    height:             @left-bar-width;
    line-height:        @left-bar-width/1.5;
    padding:            @left-bar-width/6;
    font-size:          @left-bar-width/1.5;
    border-radius:      @border-radius 0 0
                        @border-radius }

  .content {
    padding: @padding }

  // X icon at the upper-right corner
  .close,
  .close::before {
    transition: @transition-default, opacity @transition-duration;
    color: inherit !important }

  // Bottom button toolbar
  .btn-toolbar {
    display: flex;
    margin: 0 -2 * @padding (-@padding) !important;

    // Bottom buttons
    & > *, & > .btn.btn { flex: 1 1 auto }}

.btn, .btn.close-all,
.btn-success,
.btn-default.btn-success {
  &.close-all {
  &:hover {}}}

.content {
  font-size: 1em;
  background-color: transparent !important }

.message {
  .type(input);
  padding:      @padding/2 @padding !important;
  color:        @notification-text-color }

.detail {
  background:   transparent;
  color:        @notification-text-color;
  border-width: 0;
  padding-top:  0;
  line-height:  1.5em }

.detail-content {
  font-size:    0.9em;
  line-height:  1.5em }

.meta {
  color:        inherit;
  border-width: 0 }

.stack-toggle {
  border-bottom: 1px solid fade(@text-color-subtle, 5%);
  color:        inherit;
  *::before {   font-size: inherit } }

.meta {
  color: var(--text-color);
  padding-top: 0;
  padding-bottom: 0;

  .description a { color: @text-color-info }
  .btn-toolbar .icon-clippy { color: inherit }}}


atom-notification.error code { }

                                                                                                                                                                                                                                                                                                                                                                              /*
✕ State colors                                                                                                                                                                                                                                                                                                                                                          */
.notification-highlight(info, @text-color-info, @background-color-info);
.notification-highlight(success, @text-color-success, @background-color-success);
.notification-highlight(warning, @text-color-warning, @background-color-warning);
.notification-highlight(error, mix(@text-color-error, @text-color-warning, 75%), mix(@background-color-error, @background-color-warning, 75%));
.notification-highlight(fatal, @text-color-error, @background-color-error);
.notification-highlight(@state: info, @fg, @bg) {

   @cls: ~"atom-notification.icon.@{state}";

   @{cls} code,
   @{cls} pre {
     .state(@state) }

   @{cls} {
     color:      mix(@fg, @text-color, 65%);
     background: mix(@bg, @notification-background-color, 90%);

     &::before {
       color:      inherit;
       background: transparent }}}}

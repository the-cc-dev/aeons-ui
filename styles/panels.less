@import "buttons.less";
@max-iter:      8;
@handle-size:   0.8rem;
@spread-factor: 0.5%;

.panel {
}


// Brand new & shiny docks!
// Well played, atom.io developers, well played...

atom-dock {
  position: relative;

  .atom-dock-resize-handle {
    position: absolute;
    z-index: 10;

    &.left { right: -@handle-size / 2 }
    &.right { left: -@handle-size / 2 }
    &.left,
    &.right {
      top: 0;
      bottom: 0;
      width: @handle-size }

    &.top { bottom: -@handle-size / 2 }
    &.bottom { top: -@handle-size / 2 }
    &.top,
    &.bottom {
      left: 0;
      right: 0;
      height: @handle-size }}

  atom-pane-container,
  atom-pane,
  .tab-bar,
  .tab {
    // background: transparent;
    box-shadow: none }}


// Traditional panels
atom-panel-container.left,
atom-panel-container.right {
  background-color: @panel-background-color;
  border-color: @tool-panel-border-color;
  border-width: 0;
  border-style: solid;

  atom-panel {
    box-shadow: @tool-panel-box-shadow }}

// atom-panel-container.right { border-left-width: @tool-panel-outline-size }
// atom-panel-container.left { border-right-width: @tool-panel-outline-size }

.panel.bordered {
  border-width:   0;
  border-radius:  @component-border-radius;
  border-color:   @base-border-color;
  border-style:   solid }

atom-panel,
.tool-panel {

  .text(normal);
  background-color: @panel-background-color;
  border-color:     @tool-panel-border-color;
  background-color: @app-background-color !important;
  position:         relative;
  border-style:     solid;
  border-width:     0;

  > *, div, section, article {
    background: transparent !important;
  }

  // &[index='0'] {.dim(0)}
  // &[index='1'] {.dim(1)}
  // &[index='2'] {.dim(2)}
  // &[index='3'] {.dim(3)}
  // &[index='4'] {.dim(4)}
  // &[index='5'] {.dim(5)}
  // &.left {}
    // .spread(left); }
  // &.right { .spread(right) }
  &.bottom:not(:empty),
  &.footer:not(:empty),
  &.panel-bottom:not(:empty),
  &.panel-footer:not(:empty) {
    border-top-width: 0 }}

status-bar {
  @height: @status-bar-height - @status-bar-gutter;
  line-height:  var(--height, @status-bar-height);
  min-height:   var(--height, @status-bar-height);

  svg {
    height: auto !important }

  > * {
    display:        inherit; }

  .status-bar-left {
    justify-content: flex-start }

  .status-bar-right {
    justify-content: flex-end }

  .status-bar-left,
  .status-bar-right {
    vertical-align: middle;
    display: flex;
    align-items: center;
    padding: 0 }

  .status-bar-left .inline-block,
  .status-bar-right .inline-block,
  .inline-block, span {
    flex: 0 1 auto;
    display: inline-block;
    margin: 0 }

  > * span {
    display: inline-block;
    vertical-align: middle;
    max-height: 1.5rem;
    line-height: 1rem;
    padding-left: 0.2rem;
    padding-right: 0.2rem;
    margin-right: 1px }

  .status-bar-left > *:empty:not(.icon),
  .status-bar-right > *:empty:not(.icon) {
      display: none }

    > .inline-block,
    > * {
      margin:       @status-bar-gutter / 2 0;
      box-sizing:   border-box;
      line-height:  ~"calc(--height - @{status-bar-gutter})";
      height:       ~"calc(--height - @{status-bar-gutter})" }

  .status-bar-left > * ,
  .status-bar-left > .inline-block {
    margin-right: 0;
    margin-left: @status-bar-gutter }

  .status-bar-right > * ,
  .status-bar-right > .inline-block {
    margin-left: 0;
    margin-right: @status-bar-gutter }}

.tool-bar {
  border: none }

.inset-panel {
  position:         relative;
  background-color: @inset-panel-background-color }

.panel-heading {

  .text(normal);
  border-bottom-color: @panel-heading-border-color;
  border-top-color: fadein(@background-color-highlight, 10%);
  background-color: transparent;

  .btn {
    padding-left: @component-padding / 2;
    padding-right: @component-padding / 2;

    @bg:        lighten(@button-background-color, 10%);
    @hover:     lighten(@button-background-color-hover, 10%);
    @selected:  lighten(@button-background-color-selected, 10%);
    @text:      lighten(@text-color, 10%);
    .button(@bg, @text, @hover, @selected) }}

// Mixins for generating panel z-indexes and color spreads
.spread(left, @n: 1) {
  border-left-width: 0;

  & when (@n < @max-iter) {
    .spread(left, @n + 1) }

  &:nth-last-child(@{n})  {
    @tool-panel-background-color: darken(@panel-background-color, (@n - 1) * @spread-factor);
    background-color: @tool-panel-background-color !important }

  &:nth-of-type(@{n})  {
     z-index: @n }}


.spread(right, @n: 1) {
  border-right-width: 0;

  & when (@n < @max-iter) {
    .spread(right, @n + 1) }

  &:nth-of-type(@{n})  {
    @tool-panel-background-color: darken(@panel-background-color, (@n - 1) * @spread-factor);
    background-color: @tool-panel-background-color !important }

  &:nth-last-child(@{n})  {
    z-index: @n }}

.dim(@n) {
  @tool-panel-background-color: darken(@panel-background-color, (@n - 1) * @spread-factor);
  background-color: @tool-panel-background-color !important;
  z-index: 10 - @n;
}

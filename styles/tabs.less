
@import "./ui-variables";
@modified: ~".modified:not(:hover)";
@modified-hover: ~".modified:hover";
@tab-hover-box-shadow: 0 0 1em fade(black, 5%);
@tab-active-box-shadow: 0 0 1em fade(#404040, 7%);

.gradient(@start, @end: transparent) {
  background-image: linear-gradient(120deg, @start, @end) }

.tab-bar {
  @bg-bar: @tab-bar-background-color;
  @bg:
    @tab-background-color, // Default
    lighten(@tab-background-color, 6%), // Hovered
    @tab-background-color-active, // Active
    lighten(@tab-background-color-active, 10%), // Active hovered
    mix(@tab-background-color-active, @background-color-warning), // Modified
    mix(@tab-background-color-active, lighten(@text-color-warning, 10%)),  // Modified hovered
    mix(@tab-background-color-active, saturate(@text-color-info, 10%), 40%);  // Modified active

  .gradient(@color-background, lighten(@color-background, 6%));
  --height:        @tab-height;
  height:          var(--height, @tab-height);
  line-height:     var(--height, @tab-height);
  background-color: @bg-bar;
  border-radius:   0;
  border:          0 solid @tab-bar-border-color;
  border-width:    0 !important;
  border-left-color: @tab-border-color;

  .tab {
    // mix-blend-mode: overlay;
    transition: @transition-default, width @transition-duration, margin @transition-duration;
    border:     0 solid @tab-border-color;
    padding:    0 @component-padding / 2;
    background-color: extract(@bg, 1);
    height:     inherit;
    margin: 0;
    border-width: 0 }

  .tab { .tab-icon }
  .tab,  .tab .close-icon {
    font-size:  1em;
    line-height: var(--height, @tab-height) }

  // Tab title text
  .tab .title {
    .type(tabs);
    font-size: @tab-font-size }

  .tab.active .title {
    .type(active) }

  // Tab icons
  .tab .icon::before {
    font-size:      1em;
    color:          inherit;
    vertical-align: middle;
    display:        inline-block;
    margin-top:    -3px }

  // States
  .tab:hover,
  .tab.active {
    margin-top: 2px;
    z-index: 5;
    border-radius: @component-border-radius * 1.5;
    color: @text-color-highlight }

  .tab:hover {
    box-shadow: @tab-hover-box-shadow;
    border-color: lighten(@tab-border-color, 5%);
    background-color: extract(@bg, 2) }

  .tab.active {
    flex-grow: 1;
    box-shadow: 1px 3px 1em @tab-active-box-shadow;
    border-color: lighten(@tab-border-color, 2%);
    background-color: extract(@bg, 3) }

  .tab.active:hover {
    background-color: extract(@bg, 4);
    .tab-icon(hover) }

  // Close icon state overrides & transforms
  .tab@{modified} {
    background-color: extract(@bg, 5);
    .tab-icon(modified) }

  .tab@{modified-hover} {
    background-color: extract(@bg, 6);
    .tab-icon(hover) }

  .tab.active.modified,
  .tab.active.modified:hover {
    background-color: extract(@bg, 7);
    .tab-icon(modified) }

  // Close icon hover color
  .tab .close-icon:hover,
  .tab@{modified-hover} .close-icon:hover {
    background-color: @background-color-error;
    color: @text-color-error }
}

// Helper mixin for tab icon states
.tab-icon(@state: none) {
  @y: @tab-height / 2;
  @x: @y / 2;
  @s: 1.4rem;
  @regular: ~".@{state}:not(:hover)";
  @hover: ~".@{state}:hover";

  .close-icon {
    top:          @y;
    right:         @x;
    top:           ~"calc(0.5 * var(--height))";
    right:         ~"calc(0.3 * var(--height))";
    margin-top:    -@s/2;
    height:        @s;
    line-height:   @s;
    width:         @s;
    border:        none;
    transition:    transform @transition-duration, @transition-default;
    border-radius: 50%;
    cursor:        pointer }

  .close-icon::before {
    display: block;
    line-height: @s;
    height: @s;
    width: @s;
    text-align: center;
    vertical-align: middle;
    color: inherit }}

.tab-icon(modified) {

  .close-icon::before {
    display: block }

  .close-icon {
    transform: rotate(45deg) }}

.tab-icon(hover) {

  .close-icon {
    background: lighten(@tab-background-color-active, 10%);
    color: @text-color-highlight }}


// .tab.active::before {
//   content: "";
//   display: block;
//   position: absolute;
//   bottom: -4px;
//   right: 0;
//   border: 0 solid transparent;
//   border-top-color: extract(@bg, 3);
//   border-width: 4px 0 0 12px }

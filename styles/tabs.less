
@import "./ui-variables";
@modified: ~".modified:not(:hover)";
@modified-hover: ~".modified:hover";
@tab-hover-box-shadow: 0 0 1em fade(black, 15%);
@tab-active-box-shadow: 0 0 2em fade(black, 15%);
@tab-border-radius: 2px;
@tab-offset-distance: 1px;
@tab-bar-start-color: #4e407e;
@tab-bar-mid-color:   #e861c6;
@tab-bar-end-color:   #2dffb2;
@tab-bar-final-color: #b6d984;

.gradient(@start, @end: transparent) {
  background-image: linear-gradient(120deg, @start, @end) }

.gradient3(@start, @mid, @end: transparent) {
  background-blend-mode: color-dodge;
  background-image: linear-gradient(120deg, mix(@start, @tab-bar-background-color, 5%), mix(@mid, @base-background-color, 15%), mix(@end, @base-background-color, 25%)) }



.tab-bar[data-visible=false] {
  display: none !important }

atom-dock.right .tab-bar {
  .gradient(mix(@tab-bar-end-color, @base-background-color, 25%), mix(@tab-bar-final-color, @base-background-color, 50%));
  background-blend-mode: color-dodge;
  // background: transparent !important;
  margin: 0 0 1px -4px;

  .tab {
    background: transparent !important } }

atom-dock.left .tab-bar {
  margin: 0 -4px 1px 0 }


@bg-bar: @tab-bar-background-color;

         // Default
@bg:     @tab-background-color,

         // Hovered
         fade(lighten(@tab-background-color, 12%), 80%),

         // Active
         fade(mix(@tab-background-color-active, @text-color-info, 25%), 75% ),

         // Active hovered
         mix(@tab-background-color-active, saturate(@text-color-info, 10%), 25%),

         // Modified
         saturate(mix(lighten(@tab-background-color-active, 5%), @background-color-error, 50%), 18%),

         // Modified hovered
         fade(mix(@tab-background-color-active, @background-color-error, 25%), 75%),

         // Modified active
         mix(@tab-background-color-active, lighten(@text-color-error, 10%), 25%),
         transparent;
.tab-bar {

  .gradient3(@tab-bar-start-color, @tab-bar-mid-color, @tab-bar-end-color);
  // .gradient(@color-background, lighten(@color-background, 6%));
  --height:         @tab-height;
  height:           var(--height, @tab-height);
  line-height:      var(--height, @tab-height);
  background-color: @bg-bar;
  background-color: darken(@base-background-color, 1%);
  z-index:          10;
  border:           0 solid @tab-bar-border-color;
  border-radius:    0;
  border-width:     0 !important;
  box-shadow:       0.2em 0.5em 1em rgba(0,0,0,0.05);
  border-left-color: @tab-border-color;

  .tab {
    background-color: transparent;
    mix-blend-mode: lighten;
    transition: @transition-default, width @transition-duration, margin @transition-duration;
    margin:     0;
    border:     0 solid @tab-border-color;
    padding:    0 @component-padding / 2;
    height:     inherit;
    border-width: 0 !important }

  .tab { .tab-icon }
  .tab,  .tab .close-icon {
    font-size:  1em;
    line-height: var(--height, @tab-height) }

  // Tab title text
  .tab .title {
    .type(tabs);
    font-size: @tab-font-size }

  .tab.active .title {
    .type(active) }

  // Tab icons
  .tab .icon::before {
    font-size:      1em;
    color:          inherit;
    vertical-align: middle;
    display:        inline-block;
    margin-top:    -1px }

  .tab-state(@color) {
    background-color: @color;
    border-color: darken(@color, 3%);

    &:hover {
      background-color: lighten(@color, 8%);
      border-color: lighten(@color, 6%) }

    [tab-coloring=false] & {
      background-color: transparent;
      border-bottom: 2px solid lighten(@color, 25%) !important;
      background-image: linear-gradient(175deg, transparent 30%, fade(@color, 15%) 80%);
    }}

  // States
  .tab:hover,
  .tab.active {
    z-index: 5;
    margin-top: @tab-offset-distance;
    border-radius: @tab-border-radius;
    color: @text-color-highlight }

  .tab:hover {
    box-shadow: @tab-hover-box-shadow;
    .tab-state(extract(@bg, 2)) }

  .tab.active {
    z-index: 1;
    flex-grow: 1;
    box-shadow: @tab-active-box-shadow;
    .tab-state(extract(@bg, 3)) }

  .tab.active:hover {
  .tab-state(extract(@bg, 4));
    .tab-icon(hover) }

  // Close icon state overrides & transforms
  .tab@{modified} {
    .tab-state(extract(@bg, 5));
    .tab-icon(modified) }

  .tab@{modified-hover} {
    .tab-state(extract(@bg, 6));
    .tab-icon(hover) }

  .tab.active.modified,
  .tab.active.modified:hover {
    .tab-state(extract(@bg, 7));
    .tab-icon(modified) }

  // Close icon hover color
  .tab .close-icon:hover,
  .tab@{modified-hover} .close-icon:hover {
    background-color: @background-color-error;
    color: @text-color-error }
}

.list-inline {
  .tab {
  max-width: none }}

// Helper mixin for tab icon states
.tab-icon(@state: none) {
  @y: @tab-height / 2;
  @x: @y / 2;
  @s: 1.4rem;
  @regular: ~".@{state}:not(:hover)";
  @hover: ~".@{state}:hover";

  .close-icon {
    top:          @y;
    right:         @x;
    top:           ~"calc(0.5 * var(--height))";
    right:         ~"calc(0.3 * var(--height))";
    margin-top:    -@s/2;
    height:        @s;
    line-height:   @s;
    width:         @s;
    border:        none;
    transition:    transform @transition-duration, @transition-default;
    border-radius: 50%;
    cursor:        pointer }

  .close-icon::before {
    display: block;
    line-height: @s;
    height: @s;
    width: @s;
    text-align: center;
    vertical-align: middle;
    color: inherit }}

.tab-icon(modified) {

  .close-icon::before {
    display: block }

  .close-icon {
    transform: rotate(45deg) }}

.tab-icon(hover) {

  .close-icon {
    background: lighten(@tab-background-color-active, 10%);
    color: @text-color-highlight }}


// .tab.active::before {
//   content: "";
//   display: block;
//   position: absolute;
//   bottom: -4px;
//   right: 0;
//   border: 0 solid transparent;
//   border-top-color: extract(@bg, 3);
//   border-width: 4px 0 0 12px }
